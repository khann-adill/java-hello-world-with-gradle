import pl.allegro.tech.build.axion.release.domain.VersionSanitizer
plugins {
   id 'pl.allegro.tech.build.axion-release' version '1.11.0'
}

//dependencies {
//    compile 'org.slf4j:slf4j-api:1.7.12'
//    testCompile 'junit:junit:4.12'
//}
scmVersion {
	useHighestVersion = true
	branchVersionCreator = [
		'master/.*': 'simple',
		'develop/.*': 'versionWithBranch'
	]
	versionIncrementer 'incrementMinor'
	branchVersionIncrementer = [
		'master/.*': 'incrementPatch',
	]
	tag {
	  serialize = { rules, version ->
		def branch = Repository.shortenRefName(project.property("release.overriddenBranchName"))
		if (branch.startsWith('master/')) {
			def sanitizedBranch = new VersionSanitizer().sanitize(branch)
			return rules.prefix ? rules.prefix + rules.versionSeparator + version + rules.versionSeparator + sanitizedBranch : version + rules.versionSeparator + sanitizedBranch
	}
	return rules.prefix ? rules.prefix + rules.versionSeparator + version : version
	}
  }	
}

version = scmVersion.version
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'application'
apply plugin: "pl.allegro.tech.build.axion-release"


mainClassName = 'hello.HelloWorld'

// tag::repositories[]
repositories {
    mavenCentral()
}
// end::repositories[]

// tag::jar[]
jar {
    baseName = 'jb-hello-world'
    version =  '0.1.0'
}
// end::jar[]

// tag::dependencies[]
sourceCompatibility = 1.7
targetCompatibility = 1.7

dependencies {
    compile "joda-time:joda-time:2.2"
    testCompile "junit:junit:4.12"
}
// end::dependencies[]

// tag::wrapper[]
task wrapper(type: Wrapper) {
    gradleVersion = '3.5'
}
// end::wrapper[]
